<?php

namespace Glamstack\GoogleWorkspace\Tests\Fakes;

use Glamstack\GoogleAuth\AuthClient;
use Glamstack\GoogleWorkspace\ApiClient;
use Glamstack\GoogleWorkspace\Models\ApiClientModel;

class ApiClientFake extends ApiClient
{
    public function __construct(?string $connection_key = null, ?array $connection_config = [], bool $authenticate = false)
    {
        if(!$authenticate){
            parent::__construct($connection_key, $connection_config);
        } else {
            $api_client_model = new ApiClientModel();

            $this->setConfigPath();

            $this->setRequestHeaders();

            if (empty($connection_config)) {
                $this->setConnectionKey($connection_key);
                $this->connection_config = [];
            } else {
                $this->connection_config = $api_client_model->verifyConfigArray($connection_config);
                $this->connection_key = null;
            }
        }
    }

    public function setUp(){
        $this->request_headers = [
            'User-Agent' => 'google-workspace-sdk/dev/php8.1'
        ];
    }

    public function setConnectionKey(?string $connection_key): void
    {
        parent::setConnectionKey($connection_key); // TODO: Change the autogenerated stub
    }

    public function setRequestHeaders(): void
    {
        $this->request_headers = [
            'User-Agent' => 'google-workspace-sdk/dev/php8.1'
        ];
    }

    public function setLogChannels(): void
    {
        parent::setLogChannels(); // TODO: Change the autogenerated stub
    }

    public function setConfigPath()
    {
        parent::setConfigPath(); // TODO: Change the autogenerated stub
    }

    public function getLogChannels(): array
    {
        return parent::getLogChannels(); // TODO: Change the autogenerated stub
    }

    public function parseConfigFile(string $connection_key): array
    {
        return parent::parseConfigFile($connection_key); // TODO: Change the autogenerated stub
    }

    public function getConfigApiScopes(string $connection_key): array
    {
        return parent::getConfigApiScopes($connection_key); // TODO: Change the autogenerated stub
    }

    public function getConfigSubjectEmail(string $connection_key): string|null
    {
        return parent::getConfigSubjectEmail($connection_key); // TODO: Change the autogenerated stub
    }

    public function getConfigJsonFilePath(string $connection_key): string|null
    {
        return parent::getConfigJsonFilePath($connection_key); // TODO: Change the autogenerated stub
    }

    public function parseConnectionConfigArray(array $connection_config): array
    {
        return parent::parseConnectionConfigArray($connection_config); // TODO: Change the autogenerated stub
    }

    public function getConfigArrayApiScopes(array $connection_config): array
    {
        return parent::getConfigArrayApiScopes($connection_config); // TODO: Change the autogenerated stub
    }

    public function getConfigArraySubjectEmail(array $connection_config): string|null
    {
        return parent::getConfigArraySubjectEmail($connection_config); // TODO: Change the autogenerated stub
    }

    public function getConfigArrayFilePath(array $connection_config): string|null
    {
        return parent::getConfigArrayFilePath($connection_config); // TODO: Change the autogenerated stub
    }

    public function getConfigArrayJsonKey(array $connection_config): mixed
    {
        return parent::getConfigArrayJsonKey($connection_config); // TODO: Change the autogenerated stub
    }
}
